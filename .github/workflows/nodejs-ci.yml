name: Node.js CI

on: # uncomment below 4 lines when to use
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  workflow_dispatch:

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: Amitabh-DevOps/Project-03-Jenkins-CI-CD-Project-Todo-node-app # Replace with the actual repository
        ref: master  # Replace with the desired branch or commit
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci

    - name: Install ESLint dependencies
      run: npm install --save-dev eslint @eslint/js globals
      
    - name: Run linting with auto-fix
      run: npm run lint:fix || true
      
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    needs: lint
    
    strategy:
      matrix:
        node-version: [16, 18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: Amitabh-DevOps/Project-03-Jenkins-CI-CD-Project-Todo-node-app # Replace with the actual repository
        ref: master  # Replace with the desired branch or commit
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: Amitabh-DevOps/Project-03-Jenkins-CI-CD-Project-Todo-node-app
          ref: master
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
  
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/todo-node-app-ci:latest .
  
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/todo-node-app-ci:latest
  
  deploy:
    name: Deploy to EC2 (Docker)
    runs-on: ubuntu-latest
    needs: build
  
    steps:
      - name: SSH into EC2 and deploy Docker container
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update system
            echo "Updating system..."
            sudo apt update -y

            # Install Docker if not present
            if ! command -v docker &> /dev/null
            then
              echo "Installing Docker..."
              sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
              sudo usermod -aG docker ubuntu
            fi
  
            # Pull the latest Docker image
            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/todo-node-app-ci:latest
  
            # Stop & remove existing container
            echo "Stopping old container..."
            docker stop todo-app || true
            docker rm todo-app || true
  
            # Run the container
            echo "Starting new container..."
            docker run -d --name todo-app -p 8000:8000 ${{ secrets.DOCKER_HUB_USERNAME }}/todo-node-app-ci:latest

            # Print application URL
            echo "-------------------------------------------------"
            echo "Your app is deployed successfully!"
            echo "Visit: http://<EC2_Public_Url>:8000"
            echo "-------------------------------------------------"
  
  
  
    
